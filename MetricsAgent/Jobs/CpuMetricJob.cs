using System;using System.Diagnostics;using System.Threading.Tasks;using Core.DAL.Interfaces;using MetricsAgent.DAL.Models;using MetricsAgent.DAL.Repositories;using Quartz;namespace MetricsAgent.Jobs{    public class CpuMetricJob: IJob    {        private readonly IRepository<CpuMetric> _repository;        private readonly PerformanceCounter _cpuCounter;        public CpuMetricJob(IRepository<CpuMetric> repository)        {            _repository =  repository;            _cpuCounter = new PerformanceCounter(                "Processor",                "% Processor Time",                "_Total"                );         }                        public Task Execute(IJobExecutionContext context)        {            var cpuUsageInPercents = Convert.ToInt32(_cpuCounter.NextValue());            var time = TimeSpan.FromSeconds(DateTimeOffset.UtcNow.ToUnixTimeSeconds());                        _repository.Create(new CpuMetric{Time = time, Value = cpuUsageInPercents});                        return Task.CompletedTask;        }    }}